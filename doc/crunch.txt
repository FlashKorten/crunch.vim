*crunch.txt* Unlock Vims build in calculator
*crunch*
==============================================================================
             ______   ______   __  __   __   __   ______   __  __  
            /\  ___\ /\  == \ /\ \/\ \ /\ '-.\ \ /\  ___\ /\ \_\ \
            \ \ \____\ \  __< \ \ \_\ \\ \ \-.  \\ \ \____\ \  __ \
             \ \_____\\ \_\ \_\\ \_____\\ \_\\"\_\\ \_____\\ \_\ \_\
              \/_____/ \/_/ /_/ \/_____/ \/_/ \/_/ \/_____/ \/_/\/_/
==============================================================================
ASCII font courtesy of Patrick Gillespie http://patorjk.com/
==============================================================================
*OVERVIEW*

Crunch makes using Vim as a Calculator easier and forces floating point to be
used. To use Vim as a calculator you tap into Vim's Scripting language. Without
Crunch the process goes as follows.

From insert mode or command line more:
<CTRL-R>=5+5<CR>
Then 10 is inserted into the buffer or echoed in the command line.

One Problem with this method is when you expect a floating point result from
integer division
e.g. 
5/2 = 2
You can see that the result is the truncated version of the actual result.
When what you actually wanted was: 
5.0/2.0 = 2.5

Or when you enter a floating point number like this 
.5/2 
A decimal without a leading zero produces an error when you actually wanted was 
this 
0.5/2 = 0.25

423.234/234 = 1.808692

Crunch takes care of these problems for you converting all integers into their
floating point equivalent, and  adds the leading zero fixing values that start
with a decimal point. It also makes doing math with Vim so much more easy.

==============================================================================
*USAGE*

1. :Crunch
    Crunch then gives you the prompt:
    Calc >> 
    for you to enter you mathematical expression. The result is then available
    to be pasted from the default register.  

2. :CrunchLine or <leader>ee
    Crunch Uses the selected line as the expression and adds the result to the
    end 
    

If invalid expressions are used Crunch will let you know echoing or inserting
"ERROR: Invalid Input". This same string will be yanked into the paste
register.

==============================================================================
*MAPPINGS*

                       nmap <leader>ee <Plug>Crunch_Line

==============================================================================
*CONFIGURATION*



==============================================================================
*KNOWN-PROBLEMS*

==============================================================================
*CHANGE-LOG*

27 Jun 2013 added tags and clearing of previous result (made Crunch and Crunch
            line 2 different functions
24 Jun 2013 added multiplication fix
19 Jun 2013 first version

==============================================================================
*TO-DO/ADDITIONS*

Some of these might end up happening:
* custom prompt eg not >>
* interactive buffer mode like VimCalc
* support for ^ instead of pow()
* add in support for e and pi
  e = exp(1) = 2.718282
  pi = 3.141593
* add support for exponentials e.g. 10e6 for 10000000.0

==============================================================================
*LICENSE*
                 DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE
                            Version 2, December 2004
 
                Copyright (C) 2004 Sam Hocevar <sam@hocevar.net>
 
       Everyone is permitted to copy and distribute verbatim or modified
      copies of this license document, and changing it is allowed as long
                            as the name is changed.
 
                  DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE 
        TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION
 
                    0. You just DO WHAT THE FUCK YOU WANT TO
==============================================================================
*REPOSITORY-AND-BUG-TRACKER*

https://github.com/arecarn/crunch

vim:tw=78:ts=8:ft=help:norl:fdm=manual:
